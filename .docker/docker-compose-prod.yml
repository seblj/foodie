services:
  foodie_frontend:
    networks:
      - foodie-network
    container_name: foodie_frontend
    hostname: foodie_frontend
    tty: true
    build:
      context: ../
      dockerfile: frontend/.docker/Dockerfile.prod
    restart: always
    volumes:
      - ../frontend:/app
    ports:
      - "8080:80"
    # depends_on:
    #   - foodie_backend

  foodie_backend:
    networks:
      - foodie-network
    container_name: foodie_backend
    hostname: foodie_backend
    build:
      context: ../
      dockerfile: backend/.docker/Dockerfile.prod
    restart: always
    depends_on:
      - postgres
    tty: true
    ports:
      - "42069:42069"
    volumes:
      - ../backend/src:/app/src
      - ../backend/migrations:/app/migrations
      - ../.db/filestorage:/.filestorage
      - ../backend/Cargo.toml:/app/Cargo.toml
    environment:
      - DATABASE_URL=postgres://postgres:postgres@foodie_postgres:5432/postgres
      - GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      - BASE_URL=http://localhost:42069
      - FRONTEND_URL=http://localhost:8080

  postgres:
    networks:
      - foodie-network
    hostname: foodie_postgres
    container_name: foodie_postgres
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - ../.db/foodie_db:/var/lib/postgresql/data

  localstack:
    networks:
      - foodie-network
    container_name: foodie_localstack
    image: gresau/localstack-persist
    ports:
      - "127.0.0.1:4566:4566" # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559" # external services port range
    environment:
      - SERVICES=s3
      - PERSIST_S3=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - EXTRA_CORS_ALLOWED_ORIGINS=*
    volumes:
      - "../.db/localstack_data:/persisted-data"
      - "../.db/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ../.aws:/etc/localstack/init/ready.d

networks:
  foodie-network:
    driver: bridge
